Magesh Kuppan

About you:
    Name
    Primary Skillset
    Experience in Golang
    Any specific expectations?

Methodology
    No powerpoint
    Lots of handson

Repository
    https://github.com/tkmagesh/salesforce-go-mar-2022

Software Requirements
    1. Go tools (https://golang.org)
    2. Visual Studio Code (https://code.visualstudio.com)

Schedule
    Tea Break   : T + 1:30 hrs (15 mins)
    Lunch       : T + 3:30 hrs    (45 mins)
    Tea Break   : Lunch + 1:30 hrs (15 mins)

VSCode Setup
=============
Install the "Go" extension for Visual Studio Code (https://code.visualstudio.com/docs/go/getting-started)

CMD + SHIFT + P 
OR
CTRL + SHIFT + P

type : go: install
Select all the tools in the subsequent dialog box and click "OK"

Why Go?

As of 2014
    Java (~20 years)
    C# (~17 years)
    python (~10 years)
    Ruby (~15 years)
    C++ (~25 years)
    C

    Go (~5 years)

1. Faster execution time
2. Export binary
3. Easier (compared to python)
4. Designed for the cloud
5. Concurrency

Paradox of Choice
    Barry Shwatz

1. Simplicity
    - ONLY 25 keywords
    - No access modifiers
    - No classes (only structs & functions)
    - No inheritance (only composition)
    - No exceptions (only errors)
    - No generics (as of 1.17)
    - No implicit type conversion
    - No reference types (everything is a value type)
    - Pointers are supported (But no pointer arithmetic)
    - Has a garbage collector

2. Performance
    - Equivalent to C++
    - Go compiler is written in Go

3. Concurrency
    - Go is built FOR concurrency
    - goroutines
        - 4 KB ONLY
    - Language constructs for concurrency
        go, select, range, channel (data type), <- operator



Thread t = new System.Threading.Thread(() => {
    // code
});
t.Start();

go fn()

To run a go program
    go run <file_name.go>

To create a build
    go build <file_name.go>

To list the OS and architechture
    go tool dist list

To create a build for a different OS and architechture
    GOOS=windows GOARCH=386 go build -o <file_name> <file_name.go>

Data Types
    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real [float32] + imaginary [float32])
    complex128 (real [float64] + imaginary [float64])

    byte (alias for uint8)
    rune (alias for int32) (Unicode code point)

Assignment-1 (Console based calculator)
    Display the following menu 
        1. Add
        2. Subtract
        3. Multiply
        4. Divide
        5. Exit
    If the user choice is 1 - 4, 
        accept 2 numbers 
        perform the operation
        print the result
        display the menu again
    if the user choice is 5
        exit from the application
    If the user enters any other choice 
        display "Invalid choice" 
        display the menu again.


Functions
    a. variadic functions
    b. anonymous functions
    c. higher order functions
        * functions can be assigned to variables
        * functions can be passed as arguments to other functions
        * functions can be returned by other functions
    d. deferred functions

Collection Types
    a. array
        fixed size collection of elements of the same type
    b. slice
        dynamic size collection of elements of the same type
    c. map
        typed key/value collection OR dictionary OR hash table
    
Modularity
github.com/tkmagesh/myapp
Before 1.13
    GOPATH
        bin
        pkg
        src
            github.com
                tkmagesh
                    myapp

Modules introduced in GO 1.13
    go.mod
        metatdata for the application
            module name
            go runtime version
            dependencies
    
    To create a go.mod file
        go mod init <module_name>

    To install a package
        go get <package_name>
        ex:
            go get github.com/fatih/color

    To update the mod file (based on the usage of the modules in our application)
        go mod tidy

    To download the dependencies
        go mod download

    To localize the dependencies 
        go mod vendor

    To create a build
        go build .
        
    go mod command documentation
        https://go.dev/ref/mod



    